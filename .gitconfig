[user]
        name = Edd Steel
        signingkey = 1BE848D76C7C4C51349DDDCC33620159D40385A0
[alias]
        lg = log --branches --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%aN> %G? %Creset' --abbrev-commit
        lgh = !git lg -10 | head -n 10
        sweep = "!git branch | egrep '^  edd/' | while read b; do git branch -d $b; done"
        mrproper = "!git branch | egrep '^  edd/' | while read b; do git branch -D $b; done"
        nuke = "!git branch | while read b; do git branch -d $b; done"
        pr = !hub pull-request
        praise = blame
        decap = reset HEAD^
        cpr  = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
        cpr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
        create = !hub create
        init-remote = "!ssh git@eddsteel.com git init --bare "
        # please don't use this on real code
        shove = "!git commit -am \"Shoved update $(date)\" && git pull --rebase && git push origin master"
        clogp = -c core.pager='less -p^commit.*$' log -p
[color]
        ui = true
[merge]
        tool = ec
[mergetool "ec"]
        cmd = emacsclient -c -a \"\"  --eval \"(ediff-merge-files-with-ancestor \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$BASE\\\" nil \\\"$MERGED\\\")\"
        keepBackup = false

[url "git@github.com:"]
        insteadOf = gh:

[url "git@github.com:eddsteel/"]
        pushInsteadOf = git://github.com/eddsteel/
        pushInsteadOf = https://github.com/eddsteel/
        insteadOf = github://eddsteel/
        pushInsteadOf = gh:eddsteel/

[include]
        path = .gitconfig.extra
[core]
        editor = emacsclient
        excludesfile = ~/.gitignore-global
[push]
        default = current
[diff]
#                algorithm = patience
[branch]
        autosetuprebase = always
[log]
        mailmap = true
[commit]
        gpgsign = true
[tag]
        forceSignedAnnotated=true

[pull]
        rebase = true

[rebase]
        autostash = true

[filter "lfs"]
        process = git-lfs filter-process
        required = true
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
